=====
SYSTEM INFO
+ Check system is latest version or not?
- Expected outcome: No new software available
```
softwareupdate --list
```

+ List out all applications that does not come by defaults
```
for dir in /Applications /usr/local /Users; do
  find "$dir" -name "*.app" -type d 2>/dev/null | while read -r app; do
    if [[ -d "$app/Contents" ]]; then
      version=$(defaults read "$app/Contents/Info.plist" CFBundleShortVersionString 2>/dev/null)
      echo "$app - Version: ${version:-Unknown}"
    fi
  done
done
```

=====
USERS
+ Check all users that does not come by default
```
dscl . list /Users | grep -vE '^(root|daemon|nobody|_|com.apple)'
```

+ Check all users that belong to admin group
```
dscl . read /Groups/admin GroupMembership
```

=====
CREDENTIAL
+ Check in Note
+ Check in browser

=====
SHARING
+ Check all sharings
- Expect outcome
-   0   com.apple.smbd
-   0   com.apple.AppleFileServer
-   0   com.apple.screensharing
-   0   com.apple.sshd
-   0   com.apple.InternetSharing
-   0   com.apple.printd
-   0   com.apple.mediasharingd
-   0   com.apple.RemoteDesktopAgent


```
launchctl list | grep -i "share\|smb\|afp\|screen\|ssh\|internet\|print\|media\|remote"
```

=====
LOCATION SERVICES
+ Check user can allow app to enable the location or not?
```
system → privacy & security → location
```


=====
SCREEN RECORDING + SCREEN SHARING

+ 
```
sqlite3 ~/Library/Application\ Support/com.apple.TCC/TCC.db "SELECT client FROM access WHERE service = 'kTCCServiceScreenCapture';"

log show --predicate 'eventMessage contains "ScreenCapture"' --info
```


